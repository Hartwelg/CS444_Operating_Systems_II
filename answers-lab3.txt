1. Having an individual handler function for each interrupt/exception allows the operating system to treat each interrupt differently because the hardware does not do so.
2. Nothing needed to be done to make the softint program behave correctly. The kernel does not allow user programs to throw their own exceptions, so the interrupt 0x13 was thrown due to the kernel recognizing that the program wanted to operate outside of its permissions.
3. The break point test will generate the exception that it is allowed to generate based on the SETGATE macro used in kern/trap.c. If the brkpt descriptor privilege level (dpl) is set to 3, then it will generate the breakpoint exception. If the brkpt dpl is set to 0, then it will generate a general protection fault. We need the dpl for brkpt to be set to 3 in order to get the correct behavior.
4. The point of the mechanisms mentioned above is to protect the system from the user. This ensures that the system can continue to function properly when any fault is generated.